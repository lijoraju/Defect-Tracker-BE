service: defect-logger

plugins:
  - serverless-offline

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    DEFECT_TABLE: defect-logger-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/defect-*"

functions:
  createNewDefect:
    handler: api/defect.createDefect
    memorySize: 128
    description: Submit defect information and starts defect tracking process.
    events:
      - http: 
          path: defect/create
          method: post
          cors: true
  
resources:
  Resources:
    DefectsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        StreamSpecification:
          StreamViewType: "NEW_IMAGE"
        TableName: ${self:provider.environment.DEFECT_TABLE}